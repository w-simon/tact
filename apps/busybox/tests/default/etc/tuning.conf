<?xml version="1.0"?>
<config>

    <!-- Prepend this to every compiler flags string.  -->
    <prime flags="-O2 " />

    <!-- Baselines to compare tuned results with.  The first baseline 
         also will be used for comparing results hash.  -->
    <baseline description="-O2" flags="-O2" />
    <baseline description="-O3" flags="-O3" />
    <baseline description="-Os" flags="-Os" />

    <!-- Base directory for compiler installation.  It's expanded in private-etc/build-config
         (you may want to edit it if your compiler has a prefix like arm-unknown-linux-gnueabi-*). -->
    <compiler value="/usr" />
    <build_config name="CC" value="@static_params[:compiler] + '/bin/gcc'" />
    <build_config name="TARGET" value="'arm-unknown-linux-gnueabi'" />
    <build_config name="HOST" value="'arm-unknown-linux-gnueabi'" />
    <build_config name="CXX" value="@static_params[:compiler] + '/bin/gcc'" />
    <build_config name="LDFLAGS" value='"-L#{ENV["GCC_BASE"]}/arm-unknown-linux-gnueabi/lib -L#{ENV["POOL_DIR"]}/run/lib -L#{ENV["APP_DIR"]}/shared/run/lib"' />
    <build_config name="CFLAGS" value='"-I#{ENV["POOL_DIR"]}/run/include -I#{ENV["APP_DIR"]}/shared/run/include #{ENV["FLAGS"]}"' />
    <build_config name="CXXFLAGS" value='"-I#{ENV["POOL_DIR"]}/run/include -I#{ENV["APP_DIR"]}/shared/run/include #{ENV["FLAGS"]}"' />
    <build_config name="PKG_CONFIG_PATH" value='"#{ENV["POOL_DIR"]}/run/lib/pkgconfig:#{ENV["APP_DIR"]}/shared/run/lib/pkgconfig"' />

    <!-- If board_id is "localhost", then application will be run directly on the same machine,
         without making ssh connection.  -->
    <populations>
      <join_results name="local"> 
        <population board_id="localhost"/>
        <population board_id="localhost"/>
      </join_results>
    </populations>
    <population_size value="30" />
    <single_option_mutation_rate value="0.05" />
    <crossover_vs_mutation_rate value="0.6" />
    <after_crossover_mutation_rate value="0.1" />    
    <migration_rate value="0.2" />
    <greater_is_better value="false" />
    <pareto_summary_chart_generation_number value="5"/>
    <!-- Should not exceed population_size value. -->
    <archive_size value="20" />
    <pareto_best_size value="5" />
    <repetitions value="2" />
    <do_profiling value="false" />
    <num_generations value="30" />
    <threads_per_testboard value="1" />
    <!-- Should be either "performance", "size", or  "pareto". -->
    <measure value="performance" />
    <force_initial value="true" />

    <!-- A list of compiler flags for tuning.  -->
    <flags>
        <flag type="gcc_flag" value="-fargument-alias"/>
        <flag type="gcc_flag" value="-fargument-noalias"/>
        <flag type="gcc_flag" value="-fargument-noalias-anything"/>
        <flag type="gcc_flag" value="-fargument-noalias-global"/>
        <flag type="gcc_flag" value="-fassociative-math"/>
        <flag type="gcc_flag" value="-fauto-inc-dec"/>
        <flag type="gcc_flag" value="-fbranch-count-reg"/>
        <flag type="gcc_flag" value="-fbranch-target-load-optimize"/>
        <flag type="gcc_flag" value="-fbranch-target-load-optimize2"/>
        <flag type="gcc_flag" value="-fbtr-bb-exclusive"/>
        <flag type="gcc_flag" value="-fcaller-saves"/>
        <flag type="gcc_flag" value="-fcommon"/>
        <flag type="gcc_flag" value="-fconserve-stack"/>
        <flag type="gcc_flag" value="-fcprop-registers"/>
        <flag type="gcc_flag" value="-fcrossjumping"/>
        <flag type="gcc_flag" value="-fcse-follow-jumps"/>
        <flag type="gcc_flag" value="-fcse-skip-blocks"/>
        <flag type="gcc_flag" value="-fdata-sections"/>
        <flag type="gcc_flag" value="-fdce"/>
        <flag type="gcc_flag" value="-fdefer-pop"/>
        <flag type="gcc_flag" value="-fdelayed-branch"/>
        <flag type="gcc_flag" value="-fdse"/>
        <flag type="gcc_flag" value="-fearly-inlining"/>
        <flag type="gcc_flag" value="-fexpensive-optimizations"/>
        <flag type="gcc_flag" value="-ffast-math"/>
        <flag type="gcc_flag" value="-ffinite-math-only"/>
        <flag type="gcc_flag" value="-ffloat-store"/>
        <flag type="gcc_flag" value="-fforward-propagate"/>
        <flag type="gcc_flag" value="-ffunction-cse"/>
        <flag type="gcc_flag" value="-ffunction-sections"/>
        <flag type="gcc_flag" value="-fgcse"/>
        <flag type="gcc_flag" value="-fgcse-after-reload"/>
        <flag type="gcc_flag" value="-fgcse-las"/>
        <flag type="gcc_flag" value="-fgcse-lm"/>
        <flag type="gcc_flag" value="-fgcse-sm"/>
        <flag type="gcc_flag" value="-fguess-branch-probability"/>
        <flag type="gcc_flag" value="-fif-conversion"/>
        <flag type="gcc_flag" value="-fif-conversion2"/>
        <flag type="gcc_flag" value="-findirect-inlining"/>
        <flag type="gcc_flag" value="-finline"/>
        <flag type="gcc_flag" value="-finline-functions"/>
        <flag type="gcc_flag" value="-finline-functions-called-once"/>
        <flag type="gcc_flag" value="-finline-small-functions"/>
        <flag type="gcc_flag" value="-fipa-cp"/>
        <flag type="gcc_flag" value="-fipa-cp-clone"/>
        <flag type="gcc_flag" value="-fipa-matrix-reorg"/>
        <flag type="gcc_flag" value="-fipa-pta"/>
        <flag type="gcc_flag" value="-fipa-pure-const"/>
        <flag type="gcc_flag" value="-fipa-reference"/>
        <flag type="gcc_flag" value="-fipa-sra"/>
        <flag type="gcc_flag" value="-fipa-struct-reorg"/>
        <flag type="gcc_flag" value="-fivopts"/>
        <flag type="gcc_flag" value="-fjump-tables"/>
        <flag type="gcc_flag" value="-floop-block"/>
        <flag type="gcc_flag" value="-floop-interchange"/>
        <flag type="gcc_flag" value="-floop-strip-mine"/>
        <flag type="gcc_flag" value="-fmerge-all-constants"/>
        <flag type="gcc_flag" value="-fmerge-constants"/>
        <flag type="gcc_flag" value="-fmodulo-sched-allow-regmoves"/>
        <flag type="gcc_flag" value="-fmove-loop-invariants"/>
        <flag type="gcc_flag" value="-foptimize-sibling-calls"/>
        <flag type="gcc_flag" value="-fpeephole"/>
        <flag type="gcc_flag" value="-fpeephole2"/>
        <flag type="gcc_flag" value="-fpredictive-commoning"/>
        <flag type="gcc_flag" value="-freciprocal-math"/>
        <flag type="gcc_flag" value="-freg-struct-return"/>
        <flag type="gcc_flag" value="-fregmove"/>
        <flag type="gcc_flag" value="-frename-registers"/>
        <flag type="gcc_flag" value="-freorder-blocks"/>
        <flag type="gcc_flag" value="-freorder-blocks-and-partition"/>
        <flag type="gcc_flag" value="-freorder-functions"/>
        <flag type="gcc_flag" value="-frerun-cse-after-loop"/>
        <flag type="gcc_flag" value="-freschedule-modulo-scheduled-loops"/>
        <flag type="gcc_flag" value="-frounding-math"/>
        <flag type="gcc_flag" value="-fsched-critical-path-heuristic"/>
        <flag type="gcc_flag" value="-fsched-dep-count-heuristic"/>
        <flag type="gcc_flag" value="-fsched-group-heuristic"/>
        <flag type="gcc_flag" value="-fsched-interblock"/>
        <flag type="gcc_flag" value="-fsched-last-insn-heuristic"/>
        <flag type="gcc_flag" value="-fsched-pressure"/>
        <flag type="gcc_flag" value="-fsched-rank-heuristic"/>
        <flag type="gcc_flag" value="-fsched-spec"/>
        <flag type="gcc_flag" value="-fsched-spec-insn-heuristic"/>
        <flag type="gcc_flag" value="-fsched-spec-load"/>
        <flag type="gcc_flag" value="-fsched-spec-load-dangerous"/>
        <flag type="gcc_flag" value="-fsched-stalled-insns"/>
        <flag type="gcc_flag" value="-fsched-stalled-insns-dep"/>
        <flag type="gcc_flag" value="-fsched2-use-superblocks"/>
        <flag type="gcc_flag" value="-fsched2-use-traces"/>
        <flag type="gcc_flag" value="-fschedule-insns"/>
        <flag type="gcc_flag" value="-fschedule-insns2"/>
        <flag type="gcc_flag" value="-fsection-anchors"/>
        <flag type="gcc_flag" value="-fsee"/>
        <flag type="gcc_flag" value="-fsigned-zeros"/>
        <flag type="gcc_flag" value="-fsingle-precision-constant"/>
        <flag type="gcc_flag" value="-fsplit-wide-types"/>
        <flag type="gcc_flag" value="-fthread-jumps"/>
        <flag type="gcc_flag" value="-ftracer"/>
        <flag type="gcc_flag" value="-ftrapping-math"/>
        <flag type="gcc_flag" value="-ftree-builtin-call-dce"/>
        <flag type="gcc_flag" value="-ftree-ccp"/>
        <flag type="gcc_flag" value="-ftree-ch"/>
        <flag type="gcc_flag" value="-ftree-copy-prop"/>
        <flag type="gcc_flag" value="-ftree-copyrename"/>
        <flag type="gcc_flag" value="-ftree-cselim"/>
        <flag type="gcc_flag" value="-ftree-dce"/>
        <flag type="gcc_flag" value="-ftree-dominator-opts"/>
        <flag type="gcc_flag" value="-ftree-dse"/>
        <flag type="gcc_flag" value="-ftree-forwprop"/>
        <flag type="gcc_flag" value="-ftree-fre"/>
        <flag type="gcc_flag" value="-ftree-loop-distribution"/>
        <flag type="gcc_flag" value="-ftree-loop-im"/>
        <flag type="gcc_flag" value="-ftree-loop-ivcanon"/>
        <flag type="gcc_flag" value="-ftree-loop-linear"/>
        <flag type="gcc_flag" value="-ftree-loop-optimize"/>
        <flag type="gcc_flag" value="-ftree-lrs"/>
        <flag type="gcc_flag" value="-ftree-phiprop"/>
        <flag type="gcc_flag" value="-ftree-pre"/>
        <flag type="gcc_flag" value="-ftree-pta"/>
        <flag type="gcc_flag" value="-ftree-reassoc"/>
        <flag type="gcc_flag" value="-ftree-scev-cprop"/>
        <flag type="gcc_flag" value="-ftree-sink"/>
        <flag type="gcc_flag" value="-ftree-slp-vectorize"/>
        <flag type="gcc_flag" value="-ftree-sra"/>
        <flag type="gcc_flag" value="-ftree-switch-conversion"/>
        <flag type="gcc_flag" value="-ftree-ter"/>
        <flag type="gcc_flag" value="-ftree-vect-loop-version"/>
        <flag type="gcc_flag" value="-ftree-vectorize"/>
        <flag type="gcc_flag" value="-ftree-vrp"/>
        <flag type="gcc_flag" value="-funsafe-loop-optimizations"/>
        <flag type="gcc_flag" value="-funsafe-math-optimizations"/>
        <flag type="gcc_flag" value="-funwind-tables"/>
        <flag type="gcc_flag" value="-fvar-tracking"/>
        <flag type="gcc_flag" value="-fvar-tracking-assignments"/>
        <flag type="gcc_flag" value="-fvar-tracking-assignments-toggle"/>
        <flag type="gcc_flag" value="-fvar-tracking-uninit"/>
        <flag type="gcc_flag" value="-fvariable-expansion-in-unroller"/>
        <flag type="gcc_flag" value="-fvect-cost-model"/>
        <flag type="gcc_flag" value="-fweb"/>

        <flag type="gcc_flag" value="-fira-loop-pressure"/>
        <flag type="enum"   value="-fira-algorithm=CB|-fira-algorithm=priority"/>
        <flag type="enum"   value="-fira-region=one|-fira-region=all|-fira-region=mixed"/>
        <flag type="gcc_flag" value="-fira-share-save-slots"/>
        <flag type="gcc_flag" value="-fira-share-spill-slots"/>
        <flag type="enum"   value="--param ira-max-loops-num=100|--param ira-max-loops-num=1000"/>

        <flag type="gcc_flag" value="-funswitch-loops"/>
        <flag type="gcc_flag" value="-fsplit-ivs-in-unroller"/>
        <flag type="gcc_flag" value="-funroll-all-loops"/>
        <flag type="gcc_flag" value="-funroll-loops"/>
        <flag type="gcc_flag" value="-fpeel-loops"/>

        <flag type="param" value="--param inline-unit-growth" default="30" min="0" max="60" step="5" separator="=" />
        <flag type="param" value="--param large-function-growth" default="100" min="0" max="300" step="10" separator="=" />
        <flag type="param" value="--param large-function-insns" default="2700" min="0" max="5000" step="100" separator="=" />
        <flag type="param" value="--param large-stack-frame" default="256" min="200" max="312" step="8" separator="=" />
        <flag type="param" value="--param large-stack-frame-growth" default="1000" min="0" max="2000" step="100" separator="=" />
        <flag type="param" value="--param large-unit-insns" default="10000" min="0" max="20000" step="1000" separator="=" />
        <flag type="param" value="--param max-inline-insns-auto" default="90" min="0" max="200" step="10" separator="=" />
        <flag type="param" value="--param max-inline-insns-single" default="450" min="100" max="800" step="50" separator="=" />

        <flag type="param" value="--param max-variable-expansions-in-unroller" default="1" min="0" max="10" step="1" separator="=" />
        <flag type="param" value="--param max-unrolled-insns" default="200" min="0" max="400" step="11" separator="=" />
        <flag type="param" value="--param max-average-unrolled-insns" default="80" min="0" max="160" step="10" separator="=" />
        <flag type="param" value="--param max-unroll-times" default="8" min="0" max="16" step="2" separator="=" />
        <flag type="param" value="--param max-peeled-insns" default="400" min="0" max="800" step="20" separator="=" />
        <flag type="param" value="--param max-peel-times" default="16" min="0" max="32" step="2" separator="=" />
        <flag type="param" value="--param max-completely-peeled-insns" default="400" min="0" max="800" step="20" separator="=" />
        <flag type="param" value="--param max-completely-peel-times" default="16" min="0" max="32" step="2" separator="=" />
        <flag type="param" value="--param max-once-peeled-insns" default="400" min="0" max="800" step="20" separator="=" />

        <flag type="gcc_flag" value="-fprefetch-loop-arrays"/>
        <flag type="param" value="--param simultaneous-prefetches" default="6" min="0" max="20" step="1" separator="=" />
        <flag type="enum"  value="--param l1-cache-line-size=0|--param l1-cache-line-size=16|--param l1-cache-line-size=32|--param l1-cache-line-size=64|--param l1-cache-line-size=128|--param l1-cache-line-size=256"/>
        <flag type="param" value="--param prefetch-latency" default="400" min="0" max="800" step="20" separator="=" />
        <flag type="param" value="--param l1-cache-size" default="32" min="0" max="128" step="8" separator="=" />
        <flag type="param" value="--param l2-cache-size" default="256" min="32" max="1024" step="32" separator="=" />
        <flag type="param" value="--param min-insn-to-prefetch-ratio" default="0" min="0" max="20" step="5" separator="=" />
        <flag type="param" value="--param prefetch-min-insn-to-mem-ratio" default="0" min="0" max="10" step="5" separator="=" />

    </flags>

</config>
